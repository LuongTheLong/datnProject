// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql" // NOTE: sqlite does not work with NextAuth.js
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    point         Int       @default(0)
    pointCurrent  Int       @default(0)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model ToDo {
    id   String @id @default(cuid())
    name String
}

model Material {
    id          String  @id @default(cuid())
    name        String
    codeName    String?
    count       Float?
    unit        String?
    description String?
}

model Category {
    id       String  @id @default(cuid())
    name     String
    codeName String?
    items    Item[]
}

model Item {
    id          String       @id @default(cuid())
    idCategory  String
    name        String
    codeName    String?
    price       Int
    description String?
    category    Category     @relation(fields: [idCategory], references: [id])
    billDetails BillDetail[]
}

model Shift {
    id       String   @id @default(cuid())
    idWorker String
    incomes  Income[]
    bills    Bill[]
}

model Income {
    id             String @id @default(cuid())
    idShift        String
    startIncome    Int
    income         Int
    totalDecrease  Int
    feeService     Int
    vat            Float
    totalBills     Int
    outcome        Int
    moneyRemaining Int
    shift          Shift  @relation(fields: [idShift], references: [id])
}

model Bill {
    id          String       @id @default(cuid())
    numberDesk  String
    idShift     String
    vat         Float
    coupon      Int
    totalCount  Int
    shift       Shift        @relation(fields: [idShift], references: [id])
    billDetails BillDetail[]
}

model BillDetail {
    id     String @id @default(cuid())
    idBill String
    idItem String
    count  Int
    bill   Bill   @relation(fields: [idBill], references: [id])
    item   Item   @relation(fields: [idItem], references: [id])
}
